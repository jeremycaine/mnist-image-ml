{
    "status": {
        "code": -1,
        "info": "in user code:
        \n\n    File \"/opt/app-root/lib64/python3.9/site-packages/keras/src/engine/training.py\", line 2341, in predict_function  *
        \n        return step_function(self, iterator)
        \n    File \"/opt/app-root/lib64/python3.9/site-packages/keras/src/engine/training.py\", line 2327, in step_function  **
        \n        outputs = model.distribute_strategy.run(run_step, args=(data,))
        \n    File \"/opt/app-root/lib64/python3.9/site-packages/keras/src/engine/training.py\", line 2315, in run_step  **
        \n        outputs = model.predict_step(data)
        \n    File \"/opt/app-root/lib64/python3.9/site-packages/keras/src/engine/training.py\", line 2283, in predict_step
        \n        return self(x, training=False)\n    File \"/opt/app-root/lib64/python3.9/site-packages/keras/src/utils/traceback_utils.py\", line 70, in error_handler
        \n        raise e.with_traceback(filtered_tb) from None\n    File \"/opt/app-root/lib64/python3.9/site-packages/keras/src/engine/input_spec.py\", line 253, in assert_input_compatibility
        \n        raise ValueError(
        \n\n    ValueError: Exception encountered when calling layer 'sequential' (type Sequential).\n   
         \n    Input 0 of layer \"conv2d\" is incompatible with the layer: expected min_ndim=4, found ndim=2. Full shape received: (None, 28)
         \n    \n    Call arguments received by layer 'sequential' (type Sequential):\
         n      \u2022 inputs=tf.Tensor(shape=(None, 28), dtype=float32)\n      \u2022 training=False\n      \u2022 mask=None\n",
        "reason": "MICROSERVICE_INTERNAL_ERROR",
        "status": 1
    }
}